annot_gtf: /path/to/data/gencode_human/version_46/gencode.v46.annotation.gtf.gz
# needs to be bgzf compressed and have a .tbi index
annot_gff: /path/to/data/gencode_human/version_46/gencode.v46.annotation_sorted.gff3.gz
# GENCODE or Ensembl
annot_source: GENCODE
reference_fa: /path/to/data/gencode_human/version_46/GRCh38.p14.genome.fa
genome_name: GRCh38
annot_name: gencode_v46
sequencing_platform: Sequel II

# additional columns are allowed and ignored for all of these
# tsv file with "sample ID", "group" and "file"
sample_table: /path/to/data/reads/metadata_tissue.tsv
# tsv file with "sample ID" matching the IDs above and the path in the "file" column
rnaseq_table: /path/to/data/rna_seq/metadata_tissue_rnaseq_bam.tsv
# tsv file with "sample ID" matching the IDs above and the "file" path to the transcriptome in .gtf.gz format
transcriptome_table: /path/to/data/talon_gtf/gtf_metadata.tsv

isotools:
  coverage_threshold: 10
  query: "BALANCED"

stringtie:
  # Stringtie needs manual building with make, the path to the binary is needed
  path: /project/hfa_work/ENCODE/code/stringtie/stringtie

talon:
  # If true, input files to talon will be copied to $TMPDIR before running talon, useful if IO is slow
  use_tmpdir: true

# cluster couldn't find conda
path_to_conda: /home/lankenau/miniforge-pypy3/bin

# Searched for CAGE files matching the tissues from the sample table
# File name needs to contain the tissue name
CAGE_dir: /path/to/data/CAGE

# aggregating all samples with cerberus at once can be memory intensive
# set to None to disable
aggregate_at_once_limit: 5
